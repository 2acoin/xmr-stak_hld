dist: trusty

osx_image: xcode8.3

sudo: false

language: cpp

cache:
  apt: true
  directories:
    - $HOME/.cache/cuda

addons:
  apt:
    packages: &default_packages
      - cmake
      - libmicrohttpd-dev
      - libssl-dev
      - libhwloc-dev

env:
  global:
    - CUDA_ROOT: $HOME/.cache/cuda

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *default_packages
            - gcc-5
            - g++-5
      env:
        - CMAKE_CXX_COMPILER=g++-5
        - CMAKE_C_COMPILER=gcc-5
        - XMRSTAK_CMAKE_FLAGS="-DCUDA_ARCH=30 -DOpenCL_ENABLE=OFF"
        - STRIP="strip"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *default_packages
            - gcc-6
            - g++-6
      env:
        - CMAKE_CXX_COMPILER=g++-6
        - CMAKE_C_COMPILER=gcc-6
        - XMRSTAK_CMAKE_FLAGS="-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF"
        - STRIP="strip"

    # test with disabled HWLOC, MICROHTTPD, OpenSSL and no accelerators
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *default_packages
            - gcc-6
            - g++-6
      env:
        - CMAKE_CXX_COMPILER=g++-6
        - CMAKE_C_COMPILER=gcc-6
        - XMRSTAK_CMAKE_FLAGS="-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF -DHWLOC_ENABLE=OFF -DOpenSSL_ENABLE=OFF -DMICROHTTPD_ENABLE=OFF"
        - STRIP="strip"

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *default_packages
            - gcc-7
            - g++-7
      env:
        - CMAKE_CXX_COMPILER=g++-7
        - CMAKE_C_COMPILER=gcc-7
        - XMRSTAK_CMAKE_FLAGS="-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF"
        - STRIP="strip"

    - os: osx
      compiler: gcc
      env:
        - XMRSTAK_CMAKE_FLAGS="-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF"
        - STRIP="strip"

before_install:
  - . CI/checkPRBranch
  - if [ $TRAVIS_OS_NAME = osx ] ; then
      brew update;
    fi
  - export PATH=$CUDA_ROOT/bin:$PATH

install:

  # CUDA
  - if [ $TRAVIS_OS_NAME != osx ]; then
      NVCC_FOUND=$(which nvcc >/dev/null && { echo 0; } || { echo 1; });
      if [ $NVCC_FOUND -ne 0 ]; then
        mkdir -p $CUDA_ROOT &&
        cd $CUDA_ROOT &&
        travis_retry wget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run &&
        ls -la &&
        chmod u+x *-run &&
        ./cuda_8.0.44_linux-run --silent --toolkit --toolkitpath=$CUDA_ROOT &&
        rm -rf ./cuda_8.0.44_linux-run $CUDA_ROOT/{samples,jre,doc,share} &&
        cd -;
      fi
    fi;

script:
  - if [ $TRAVIS_OS_NAME = osx ]; then
      brew install hwloc;
      cmake -DMICROHTTPD_ENABLE=OFF -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl ${XMRSTAK_CMAKE_FLAGS} .;
    else
      cmake -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER} ${XMRSTAK_CMAKE_FLAGS} .;
    fi;
  - make VERBOSE=1 install
  - ./bin/xmr-stak --help

before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG=${TRAVIS_COMMIT} ; fi
- cd src
- TARGETS="xmr-stak"
- ${STRIP} ${TARGETS}
- rm -rf xmr-stak-${TRAVIS_TAG} 
- mkdir xmr-stak-${TRAVIS_TAG}
- cp ${TARGETS} xmr-stak-${TRAVIS_TAG}/
- tar cvfz xmr-stak-${TRAVIS_TAG}-${LABEL}.tar.gz xmr-stak-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp xmr-stak-${TRAVIS_TAG}-${LABEL}.tar.gz builds
- cd ..

deploy:
  - provider: s3
    access_key_id:
      secure: WBT2p+c/Z919ILd3OEY9oYNf5zDHrNNtn0RNhdEbXuxDmHMeLMzJrOsf93ZFBd1K2q1VkGMROWC1Xa+CX1ftG8xaog9dYBVpA6fTVRXmjX5yTxdz9F3Bf6Rg7oqG4I+D6ZsbFQoOwB8pFQV9WJSfqjYrQqSuB7go35AYRzwABNMYeA1XoqnktH29KI5/XymfEjBGY/vqfJvaZz4Z+spba8nu48cjQBBPFPzlv/BBGF2UGu69MHDU0ND0zaSoKubYt2U+JKY7zuBOAqF2MRdVyIgtEuX8BHRFFccynhmL2J+wwwz/2OM2JWZa1XbNGtKXuybnlpegjx1lKSjiLNQi8ovgDqKlP43AF2FqYOVRV9hBvQHqssi/EUoaJUubrGBA83jn50UtONr8mykwHGBXsp66+PNP8fXHO/T4j5v5PAULwIAtOAJA4aCCQbNaw7AmYPTH8gVRAlMFcNEA8NfgAKKnA6aKBAYpJN6lmz9bgmewkwT05rze6oTnjCv+T9RggOuYIm7rDe41tzPwk1EfLVmSdDPVRHwW0RDBmMt6L/WhMmWH7yNSGEPydGE+bles8vUSLPLN6YQSC0iSE8A0huAqzob/3x56XNh6+PDqMNvCx49Bz8D1zbgQn+s2yhm4r2N27f3Ui3dmjw4jIxapH7LothdH5s0g33p3R7r+1mU=
    secret_access_key:
      secure: Ada79+MpDjZrxUihka5u5381AQlBzAwTWQekxZ/WWDx9xxu7LgQuSDDmetk/Fjcnuqew4CyxuHmyUOjUb2QEwJaOorJlxJOhXyLQJUT8CnWXy6uvCNNn/NenBGqcJvK4w3k8wIqAk3UZxemO1d3xkVQCWRuvKn+AFjewVu1Db4miac33jwccejC6TJUmC02bIFP+CuJvn8cA3exiPMGzc3LeNxL0AapGlP2Vf/ECVCgEVcapVp5Zayr8go7axKkSuZqx9lBUOKkc9AIswFJboy2JL5HKJWCr1486ayWJAKSLS81Vi+vYZHtl6bUz1MKTSdLE6c5mcD+FjLjPpOzxQPW/ytZnBJ9WvFZzMFGHL+5v3T9SO5xAU+IngXjktbbziMJX7B7M3Z2TeXqiLgFEk1hymPWLetgjf/SMXhmcSITZb7n8RtLdLP4JDKwORsIX2oLJyC6dLndAmcYwC0JUkkIYp/btz/L/X+GRW/JXrFEuEchn7DkezWvRWj3p+j0GTKnvpduUxuQQ7ZlUYiqwocx5hsHpzRPbcxUaFt3EPP/pUErRgVE/XGntxMY623YFHjYNv1ToVxN0svQUNLJvCc11flinH2FP1kAVwrc1FxCkigdqBGTJM4z8/SQWpU0UaICEcMnfCcH8eOnHFLPViNnd5oLOaSm704fR0Glcjf4=
    bucket: olk-2acoin
    skip_cleanup: true
    acl: public_read
    region: us-east-1
    upload-dir: 2acoin
    local-dir: src/builds
